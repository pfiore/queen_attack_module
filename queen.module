<?php

function queen_menu() {
    $items['queen'] = array(
        'title' => 'Queen Attack!',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('queen_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );

    $items['attack'] = array(
        'title' => 'Attack!',
        'page callback' => 'queen_attack',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    return $items;
}
function queen_form() {
    $form['queen_x'] = array (
        '#title' => 'Starting X position of Queen',
        '#type' => 'textfield',
        '#description' => t('Enter the starting X coordinate for the Queen'),
        '#element_validate' => array('element_validate_number', 'element_validate_range_queen', 'element_validate_whole_number'),
        '#required' => TRUE,
    );
    $form['queen_y'] = array (
        '#title' => 'Starting Y position of Queen',
        '#type' => 'textfield',
        '#description' => t('Enter the starting Y coordinate for the Queen'),
        '#element_validate' => array('element_validate_number', 'element_validate_range_queen', 'element_validate_whole_number'),
        '#required' => TRUE,
    );

    $form['pawn_x'] = array (
        '#title' => 'Starting X position of Pawn',
        '#type' => 'textfield',
        '#description' => t('Enter the starting X coordinate for the Pawn'),
        '#element_validate' => array('element_validate_number', 'element_validate_range_queen', 'element_validate_whole_number'),
        '#required' => TRUE,
    );
    $form['pawn_y'] = array (
        '#title' => 'Starting Y position of Pawn',
        '#type' => 'textfield',
        '#description' => t('Enter the starting Y coordinate for the Pawn'),
        '#element_validate' => array('element_validate_number', 'element_validate_range_queen', 'element_validate_whole_number'),
        '#required' => TRUE,
    );

    $form['submit'] =array(
        '#type' => 'submit',
        '#value' => 'Can the Queen attack the Pawn?',
    );
    return $form;

}

function element_validate_range_queen($element) {
    if ($element['#value'] < 1 || $element['#value'] > 8 ) {
        form_error($element, t('Number must be between 1 and 8 to fit on the chess board.'));
    }
}

function element_validate_whole_number($element) {
    if (floor($element['#value']) !== intval($element['#value']) ){
        form_error($element, t('Input must be a whole number'));
    }
}

function queen_form_submit($form, &$form_state) {
    $queen_x = $form_state['values']['queen_x'];
    $queen_y = $form_state['values']['queen_y'];
    $pawn_x = $form_state['values']['pawn_x'];
    $pawn_y = $form_state['values']['pawn_y'];
    $attack = "";

    if($queen_x == $pawn_x && $queen_y == $pawn_y) {
        $attack = "Both Queen and Pawn can't occupy the same space.";
    }
    elseif(abs($queen_x - $pawn_x) == abs($queen_y - $pawn_y) ) {
        $attack = "The Queen can attack the Pawn";
    }
    elseif($queen_x - $pawn_x == 0 || $queen_y - $pawn_y == 0) {
        $attack = "The Queen can attack the Pawn";
    }
    else{
        $attack = "Not in range";
    }

    $_SESSION['queen_result'] = $attack;

    $form_state['redirect'] = 'attack';
}

function queen_attack() {
    $answer = $_SESSION['queen_result'];
    return $answer;
}
